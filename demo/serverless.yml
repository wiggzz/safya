service: demo
provider:
  name: aws
  runtime: nodejs6.10

# you can define service wide environment variables here
  environment:
    SAFYA_BUCKET:
      Ref: SafyaBucket
  iamRoleStatements:
    - Effect: Allow
      Action:
        - "s3:ListBucket"
      Resource:
        Fn::Join:
          - ""
          - - "arn:aws:s3:::"
            - Ref: SafyaBucket
    - Effect: Allow
      Action:
        - "s3:PutObject"
        - "s3:GetObject"
      Resource:
        Fn::Join:
          - ""
          - - "arn:aws:s3:::"
            - Ref: SafyaBucket
            - "/*"

# you can add packaging information here
#package:
#  include:
#    - include-me.js
#    - include-me-dir/**
#  exclude:
#    - exclude-me.js
#    - exclude-me-dir/**

functions:
  postEvent:
    handler: dist/safya-rest.postEvent
    events:
      - http:
          path: events
          method: post

  handleEvent:
    handler: dist/application.handleEvent
    events:
      - s3: safya
#      - s3: ${env:BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic
#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000
#      - alexaSkill
#      - alexaSmartHome: amzn1.ask.skill.xx-xx-xx-xx
#      - iot:
#          sql: "SELECT * FROM 'some_topic'"
#      - cloudwatchEvent:
#          event:
#            source:
#              - "aws.ec2"
#            detail-type:
#              - "EC2 Instance State-change Notification"
#            detail:
#              state:
#                - pending
#      - cloudwatchLog: '/aws/lambda/hello'
#      - cognitoUserPool:
#          pool: MyUserPool
#          trigger: PreSignUp

#    Define function environment variables here
#    environment:
#      variable2: value2

# you can add CloudFormation resource templates here
resources:
  Resources:
    S3BucketSafya:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: safya-demo-bucket
    EventHandlerLambdaPermissionSafyaS3:
      Type: AWS::Lambda::Permission
      Properties:
        FunctionName:
          Fn::GetAtt:
            -
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
